name: CI Pipeline for Main
run-name: ${{ github.actor }} started CI ðŸš€
on:
  workflow_dispatch:
  push:
    branches: [ main-github-actions ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      #- name: List files in the repository
      #  run: ls ${{ github.workspace }}

      - name: Setup Node 20.12.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.0
      
      #- name: Building
      #  run: npm ci

      #- name: Executing unit tests
      #  run: npm test

      #- name: SonarCloud Scan
      #  uses: SonarSource/sonarcloud-github-action@v3.1.0
      #  env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      #- name: Make the mtar build and deploy script executable
      #  run: chmod +x ./.github/workflows/scripts/btp_deploy.sh
        
      #- name: Run mtar build and deploy
      #  env:
      #    cf_user: ${{ secrets.CF_USER }}
      #    cf_password: ${{ secrets.CF_PASSWORD }}
      #    cf_api_url: ${{vars.CF_API_URL}}
      #    cf_org: ${{vars.CF_ORG}}
      #    cf_space: ${{vars.CF_SPACE}}
      #  run: ./.github/workflows/scripts/btp_deploy.sh


        # Calculation of the short SHA, to use it in ctms, technically its not required, we just what to have the same message like from BTP CICD
        #Code from https://dev.to/hectorleiva/github-actions-and-creating-a-short-sha-hash-8b7
      - name: Set short git commit SHA
        id: short_sha
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
        
      - name: Confirm git commit SHA output
        run: echo ${{ env.COMMIT_SHORT_SHA }}
          
      - name: replace withspace by underscore in commit msg.
        id: ctms_msg
        run: |        
          msg=$(echo '${{ github.event.head_commit.message }}')
          echo "COMMIT_CTMS=${msg// /_}" >> $GITHUB_ENV
                
      - name: Confirm git commit ctms msg output
        run: echo ${{ env.COMMIT_CTMS }} 

      - name: cut the commit message if to long
        id: ctms_msg_completed
        run: |        
          CONCAT_MSG_TMP=$(echo '${{ env.COMMIT_SHORT_SHA }}-${{ env.COMMIT_CTMS }}')
          echo "CONCAT_MSG=$(echo $CONCAT_MSG_TMP | cut -c 1-512)" >> $GITHUB_ENV

      - id: ctms_upload
        name: Handover to cTMS
        uses: SAP/project-piper-action@main
        with:
          step-name: tmsUpload
          flags: >
            --nodeName testaccount
            --mtaPath ./incident-management_1.0.0.mtar
            --serviceKey ${{ secrets.CTMS }}
            --customDescription ${{ env.CONCAT_MSG }}
            --namedUser ${{ github.actor }}
            --verbose
          #${{ github.event.head_commit.message }}
          #--mtaPath ./mta_archives/app.mtar      
      - uses: neonidian/teams-notify-build-status@v4
        if: always()  
        with:
          webhookUrl: ${{ secrets.TEAMS_INCOMING_WEBHOOK_URL_1 }}
          title: Build of "${{ github.event.head_commit.message }}" has finished!                                      # Specify a title header
          titleBackgroundColor: ${{ job.status }}    # Specify title background color. 'unitTest' is the ID of a step
          status: ${{ job.status }}                  # Specify what should be displayed in the status label
          message: |
            Repo: ${{ github.repository }}
            Branch: ${{ github.ref }}
            ID: ${{ github.event.head_commit.id }}
        env:                                                     # Enable actor labels and buttons using environment variables
          SHOULD_DISPLAY_ACTOR_LABEL: true
          SHOULD_DISPLAY_VIEW_RUN_BUTTON: true
          SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true